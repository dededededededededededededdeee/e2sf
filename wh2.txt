@name WH2
@inputs W:wirelink
@persist EI I [Players OP]:table
if (->W&(first()|dupefinished()|changed(->W))){
    W:egpClear()
    timer("scan",10)
}
if (clk("scan")){
    findByClass("player")
    Players=findToTable()
    if (Players:count()!=OP:count()){
        I=0
        EI=0
        timer("egp",10)
    }
    OP=Players
    timer("scan",10)
}
if (clk("egp")&(I<Players:count())){
    if (clk("egp")&!I){W:egpClear()}
    I++
    P=Players[I,entity]
    
    EI++
    W:egp3DTracker(EI,vec(0,0,0))
    W:egpParent(EI,P)
    if(Players[I,entity]:isAdmin()){
        EI++
        W:egpColor(I+List:count(),vec(255,0,0))
        W:egpSize(I+List:count(),2)
        W:egpText(I+List:count()*2,Type:string(2) + " " + Type:string(3),vec2(-20000 / Distance,-45000 / Distance))
        W:egpSize(I+List:count()*2,clamp(20000 / Distance,10,30))
        W:egpText(I+List:count()*3,""+round(Distance),vec2(-15000 / Distance,30000 / Distance))
        W:egpSize(I+List:count()*3,clamp(20000 / Distance,10,30))
        W:egpColor(I+List:count()*3,vec(100,0,0))
        W:egpParent(EI,EI-1)
    }else{
        EI++
        W:egpBox(EI,vec2(0,0),vec2(10,10))
        W:egpColor(EI,vec4(100,255,100,100))
        W:egpPos(EI,W:egpPos(EI-1))
        W:egpParent(EI,EI-1)
    }
    EI++
    W:egpText(EI,Players[I,entity]:name(),vec2())
    W:egpParent(EI,EI-2)
    timer("egp",5)
}

entity():setAlpha(255)
