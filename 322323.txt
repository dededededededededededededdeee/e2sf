@name E2 Finder / Stealer
@persist F:array
 
 
if(first() | dupefinished()){
    # should create a little theif dude above the chip
    holoCreate(1)
    holoPos(1, entity():pos()+vec(0,0,3))
    holoModel(1, "models//player/t_arctic.mdl") # Server has custom holos disabled atm
    holoScale(1, vec(0.3,0.3,0.3))
    hint("You are using Jim Dangles E2 Finder / Stealer", 3)
    hint("Type /help to print commands to console",3)
 
 
    #functinon to print commands
    function void printCommands(){
        hint("Commands have been printed to console", 3)
        soundPlay(0,0,"buttons/button18.wav")
        print(_HUD_PRINTCONSOLE,"=================================================================================================================================")
        print(_HUD_PRINTCONSOLE, "Commands are very simple")
        print(_HUD_PRINTCONSOLE, "You have to type /find before you use /take")
        print(_HUD_PRINTCONSOLE, "/take must be followed by a valid player name")
        print(_HUD_PRINTCONSOLE, "please do not use to MALICIOUSLY")
        print(_HUD_PRINTCONSOLE,"=================================================================================================================================")
        }
    }
 
 
 
runOnChat(1)
if(chatClk(owner())){
    Chat = owner():lastSaid():explode(" ")
    C=Chat:string(1)
    switch(C:upper()){
        case "/HELP",
        hideChat(1)
        printCommands()
        break
 
        case "/FIND",
        hideChat(1)
        findByClass(entity():type())
        findExcludeEntity(entity())
        findSortByDistance(owner():pos())
        F = findToArray()
        for(I=1, F:count()){
            print(F[I,entity]:owner())
            }
        if(F:count()<1){
            hint("No chips found",3)
            soundPlay(0,0,"buttons/button2.wav")
            }
        if(F:count()==1){
            hint(F:count() + " chip found!", 3)
            soundPlay(0,0,"buttons/button19.wav")
            }
        elseif(F:count()>1){
            hint(F:count() + " chips found!", 3)
            soundPlay(0,0,"buttons/button19.wav")
            }
        break
 
        case "/TAKE",
        hideChat(1)
        if(findPlayerByName(Chat:string(2)):isPlayer()){
            for(I=1, F:count()){
            if(F[I, entity]:owner() == findPlayerByName(Chat:string(2))){
                # I was testing to see if there was a way to remove the prop it was constrained to but if there is no extra prop it deletes itself
                #[if(F[I, entity]:isConstrainedTo()!=entity()){
                    F[I, entity]:isConstrainedTo():propDelete()
                    }]#
                #F[I, entity]:teleport(entity():pos()+vec(0,10+10*I,25)) this is a custom function on the server I play on, but propmanipulate works too!
                F[I, entity]:propManipulate(entity():pos()+vec(0,10+10*I,25), F[I, entity]:angles(),1,1,0)
                soundPlay(0,0,"buttons/button17.wav")
                }
            }
            }
        else{
        hint("Player does not exist!", 3)
        soundPlay(0,0,"buttons/button2.wav")
        }
        break
 
 
        }
    }
